[
    {
        "id": "newcomer",
        "title": "Newcomer",
        "creationDate": "Senior Design Project",
        "description": "Newcomer is a mobile app and website in Flutter that connects employees at their new companies based off of similar interests or hobbies. Using machine learning hosted on a cloud Python server, we can recommend different groups that employees can join that are unique to each company based on an initial survey that asks for their interests. Members can then connect with others that share the same interests through a group chatting feature and schedule activities or events to help foster in person connections.\n\nThe project won our Senior Design Conference session, as well as the Computer Science & Engineering Department Technical Excellence Award. Only one team in the entire department is awarded this honor each year, selected from 40+ different teams and 200+ Computer Science students.",
        "tags": ["Dart", "Flutter", "Firebase", "Python", "Flask", "word2vec", "sklearn", "spaCy"],
        "logo": "/images/newcomerlogo.png",
        "images": ["/images/newcomer_table.png", "/images/newcomer_screenshot.jpg"],
        "links": {
            "Slideshow": "/files/NewcomerSlides.pdf",
            "Presentation": "https://www.youtube.com/watch?v=z4xg62X35RU"
        }
    },
    {
        "id": "tripsitter",
        "title": "Tripsitter Travel",
        "creationDate": "March 2024",
        "description": "Tripsitter Travel is a web and mobile application that has everything you need for your dream vacation. Utilizing 8 different APIs, users can book flights and hotels, find rental cars, events, and restaurants, and check out all through the app! Our map visualization, itinerary to PDF, and export to Google Calendar features streamline the planning process. The app uses Flutter on the frontend, Firebase for user/trip data management, and Node.js for calling all of our external APIs.\n\nI was personally responsible for creating reusable widgets across the entire application, including member selection boxes, filters for airlines/booking companies etc. I also was solely responsible for the Itinerary to PDF feature and adding many UI upgrades to all of the feature pages. The hardest part of this project was processing an immense amount of data from many different APIs for use to display.",
        "tags": ["Dart", "Flutter", "Firebase", "JavaScript", "Node.js"],
        "logo": "/images/tripsitterlogo.png",
        "images": ["/images/tripsitter2.png", "/images/tripsitter3.png"],
        "youtube": "Zlpp4q-L4r8",
        "links": {
            "GitHub": "https://github.com/CSEN-SCU/csen-174-w24-project-tripsitter",
            "Live Site": "https://tripsitter-travel.web.app/",
            "Slideshow": "/files/TripsitterPresentation.pdf"
        }
    },
    {
        "id": "voluntarius",
        "title": "Voluntarius",
        "creationDate": "Hack for Humanity 2022",
        "description": "Voluntarius is a web and mobile application that connects volunteers with those in need. Users can post job listings, view nearby tasks on an interactive map, apply, and chat with job posters. Completed hours can be exported as PDFs for easy volunteering records. The app uses Flutter for cross-platform development, Firebase for authentication and database management, and Node.js for real-time updates and notifications.\n\nI was personally responsible for processing push notifications with Node.js, creating Dart classes for Firebase, and the volunteer hour PDF generator with Flutter. This was my first hackathon and my first time working with Flutter, Node.js, and Firebase. It was a fantastic experience working with a team to develop an app in 24 hours and learning new technologies.",
        "tags": ["Dart", "Flutter", "Firebase", "JavaScript", "Node.js"],
        "logo": "/images/voluntariuslogo.png",
        "youtube": "G9sgg8IAk3Q",
        "images": ["/images/voluntarius.png"],
        "links": {
            "GitHub": "https://github.com/jordanmosakowski/voluntarius",
            "DevPost": "https://devpost.com/software/redacted-lx52yk",
            "Live Site": "https://voluntarius-h4h.web.app/",
            "Slideshow": "/files/VoluntariusPresentation.pdf"
        }
    },
    {
        "id": "human-benchmark-bot",
        "title": "Human Benchmark Bot",
        "creationDate": "January 2022",
        "description": "The Human Benchmark Bot is a collection of webscraping scripts aimed to achieve the highest possible score on the Human Benchmark Tests, which measure abilities such as reaction time, visual memory, verbal memory, etc. The programs use many python libraries such as PyAutoGUI for clicking on different parts of the screen, Python Imaging Library (PIL) for scanning the screen, and Selenium Webdriver for navigating webpages and clicking HTML elements.\n\nThe project earned 3rd place for SCUACM's Winter Challenge 2022. Building the Human Benchmark Bot reminded me that personal projects are about solving challenges you see in life, and that you can overcome them with enough research and hard work.",
        "tags": ["Python", "Selenium", "PyAutoGUI", "PIL", "Pynput"],
        "logo": "/images/humanbenchmarklogo.png",
        "images": ["/images/humanbenchmark.gif", "/images/humanbenchmark2.gif"],
        "links": {
            "GitHub": "https://github.com/cyin100/HumanBenchmarkBot",
            "HumanBenchmark Site": "https://humanbenchmark.com/"
        }
    },
    {
        "id": "game-plan",
        "title": "Game Plan",
        "creationDate": "INRIX Hack 2022 Finalist",
        "description": "Game Plan is a web and mobile app that simplifies planning day trips. Users fill out a questionnaire about their preferences for date, time, area, and interests. The app then curates a customized itinerary with various activities in the chosen locale. It's developed using Flutter and for a seamless front-end experience, and combines Firebase with Flask for backend processing. The app's standout feature is its unique algorithm, which taps into INRIX and Google Maps APIs to offer tailored suggestions based on location ratings and tags.\n\nMy contribution to GamePlan was leading the backend development in Python/Flask. I implemented the algorithm to interact with INRIX and Google Maps APIs, identifying potential hotspots and calculating travel times and distances. This was my first experience leading the backend for a project, and I learned a lot about piecing APIs together as well as saving costs by reducing API calls.",
        "tags": ["Dart", "Flutter", "Firebase", "Python", "Flask", "INRIX", "Google Maps"],
        "logo": "/images/gameplanlogo.png",
        "images": ["/images/gameplan.png"],
        "links": {
            "GitHub": "https://github.com/rukasuamarike/game-plan",
            "DevPost": "https://devpost.com/software/gameplan",
            "Slideshow": "/files/GamePlanPresentation.pdf"
        }
    },
    {
        "id": "undertale-file-loader",
        "title": "Undertale File Loader",
        "creationDate": "February 2022",
        "description": "Undertale File Loader is a Command Line Interface program to help you load save files from custom starting points in the games UNDERTALE and DELTARUNE. Users can choose from a large selection of points in the game and the program will boot up the game and start from there. It also provides options to backup your save data and restore it later, and even to hack in overpowered items or buff your stats.\n\nBeing an avid UNDERTALE fan, I developed the script mostly for my own usage, letting me jump into my favorite boss fights without having to start all the way from the beginning. Writing the script was great practice for File I/O with Python and providing user flexibility.",
        "tags": ["Python", "CLI", "File I/O"],
        "logo": "/images/undertalelogo.png",
        "images": ["/images/undertale.jpg", "/images/spamton.png"],
        "links": {
            "GitHub": "https://github.com/cyin100/UndertaleFileLoaders"
        }
    },
    {
        "id": "personal-website",
        "title": "Personal Portfolio Site",
        "creationDate": "December 2023",
        "description": "The website you're currently on! This site was made with React, Tailwind CSS, and Next.js with TypeScript, and deployed via Vercel. I chose Next.js because of how it lets you generate multi-page webapps. I'm using a template HTML/CSS component with React (e.g. for different projects) and map data from a JSON file in order to create multiple webpages with the same code. The webpages are dynamically generated and thus it's super easy to add new projects as I acquire more experience.",
        "tags": ["HTML", "CSS", "TypeScript", "React", "Tailwind CSS", "Next.js", "Vercel"],
        "logo": "/images/newsitelogo.png",
        "images": ["/images/newsite.png"],
        "links": {
            "GitHub": "https://github.com/cyin100/personal-site",
            "Recursion": "/projects/personal-website"
        }
    },
    {
        "id": "scu-coen",
        "title": "SCU COEN",
        "creationDate": "2021-2025",
        "description": "Collection of my Computer Science & Engineering work at Santa Clara University\n\nCOEN12: Data Structures\n\nCOEN20: Embedded Systems\n\nCOEN79: Object Oriented Programming\n\nCOEN140: Machine Learning\n\nCOEN146: Computer Networks\n\nCOEN160: Adv. Object Oriented Programming\n\nCOEN171: Programming Languages",
        "tags": ["C", "C++", "Python", "Java", "ARM Assembly"],
        "logo": "/images/sculogo.png",
        "images": ["/images/machinelearning.png"],
        "links": {
            "GitHub": "https://github.com/cyin100/SCU"
        }
    },
    {
        "id": "wordle-helper",
        "title": "Wordle Helper",
        "creationDate": "January 2022",
        "description": "Simple Command Line Interface Tool to help with Wordle. Users enter their guesses and Wordle's response, and the program will list all possible remaining words the solution can be, and repeat until solved. The algorithm is quite simple, it just follows the logic of Wordle and eliminates words based off of correct or voided letters and positions.",
        "tags": ["Python", "CLI"],
        "logo": "/images/wordlelogo.webp",
        "images": ["/images/wordle.png"],
        "links": {
            "GitHub": "https://github.com/cyin100/WordleHelper"
        }
    },
    {
        "id": "portfolio-site",
        "title": "Portfolio Site",
        "creationDate": "2022-2023",
        "description": "Previous site for my portfolio (being replaced by the site you're on!) hosted on GitHub Pages. Single-page application featuring about me, projects, and experience sections. Built using the React.js and Tailwind CSS frameworks. While I do like the aesthetic of the site, I wanted to use a multi-page application so I could talk in more detail about each of my projects, as well as refine to a cleaner look and feel.",
        "tags": ["HTML", "CSS", "JavaScript", "React.js", "Tailwind CSS", "GitHub Pages"],
        "logo": "/images/personalsitelogo.png",
        "images": ["/images/oldportfolio.png", "/images/oldwebsite.png"],
        "links": {
            "GitHub": "https://github.com/cyin100/personal-site",
            "Live Site": "https://cyin100.github.io/personal-site"
        }
    },
    {
        "id": "allescan",
        "title": "AlleScan",
        "creationDate": "Hack for Humanity 2023",
        "description": "AlleScan is a mobile app that highlights specified allergies from nutrition facts. Users input their allergies into their profile, and take or upload a photo of a food's ingredients. The app will then highlight any instances of potential risks. The app uses Flutter for frontend and access to camera, Firebase for user profiles, and Flask with Google Cloud Vision API for Optical Character Recognition (OCR).\n\nI worked on the backend in Flask, utilizing Google Cloud Vision API to extracting text from images and drawing highlights around indicated ingredients.",
        "tags": ["Dart", "JavaScript", "Flutter", "Firebase", "Flask", "Google Cloud Vision API"],
        "logo": "",
        "images": ["/images/allescanlogo.png", "/images/allescan.png"],
        "links": {
            "GitHub": "https://github.com/rukasuamarike/flutterallergy",
            "DevPost": "https://devpost.com/software/hi-9cjrfo"
        }
    },
    {
        "id": "musescore-to-pdf",
        "title": "MusescoreToPDF",
        "creationDate": "July 2022",
        "description": "MuseScore is a site that hosts free sheet music. With this program, users enter in a valid MuseScore URL, and the webdriver will scrape the page and save the sheet music to a PDF for later use. MuseScore only loads pages actively on the screen, so the Pynput, PyAutoGUI, and PIL libraries are used to automatically scroll through and the Selenium Webdriver inspects the HTML to extract pages as PDFs.",
        "tags": ["Python", "Selenium", "Pynput", "PyAutoGUI", "PIL", "MuseScore"],
        "logo": "",
        "images": ["/images/musescore.png"],
        "links": {
            "GitHub": "https://github.com/WinbertZhang/MusescoreToPDF"
        }
    },
    {
        "id": "gamepigeon",
        "title": "Game Pigeon Tournament",
        "creationDate": "August 2021",
        "description": "This project was part of a GamePigeon tournament I hosted for the SCU 2025 Discord Server. GamePigeon is a collection of minigames like Darts, Connect 4, and 8 Ball that can be played through iMessage. I organized the tournament from getting people to sign up, writing the rules and spreadsheet, and organizing matches. I used Google Forms to have people submit match results and used Google AppScript (which closely resembles JavaScript) to automate score calculation and spreadsheet population.",
        "tags": ["AppScript"],
        "logo": "",
        "images": ["/images/gamepigeon.png"],
        "links": {
            "Rules Document": "https://docs.google.com/document/d/151hZJydQ8DBo6wooefMQtudZDn3ekHQJEslL2tVE0to/edit?usp=sharing",
            "Spreadsheet": "https://docs.google.com/spreadsheets/d/14_9YJz64Pps0P4BLefLUM89k6q7VB6gAbe5gPxWEo_I/edit?usp=sharing"
        }
    }
]
